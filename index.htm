<!DOCTYPE html>
<html lang="en">
<head>
    <meta charset="UTF-8">
    <meta name="viewport" content="width=device-width, initial-scale=1.0">
    <title>SST Tests Preparation</title>
    <!-- Use Tailwind CSS for modern, responsive styling -->
    <script src="https://cdn.tailwindcss.com"></script>
    <!-- Include html2canvas for capturing the result as a PNG -->
    <script src="https://cdn.jsdelivr.net/npm/html2canvas@1.4.1/dist/html2canvas.min.js"></script>
    <style>
        /* Define a custom font family for Georgia */
        .font-georgia {
            font-family: Georgia, serif;
        }

        /* Style for the custom modal box */
        .modal-overlay {
            position: fixed;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
            background-color: rgba(0, 0, 0, 0.75);
            backdrop-filter: blur(5px);
            display: flex;
            justify-content: center;
            align-items: center;
            z-index: 100;
            opacity: 0;
            transition: opacity 0.3s ease-in-out;
        }

        .modal-overlay.active {
            opacity: 1;
        }

        .modal-content {
            background-color: #ffffff;
            padding: 2.5rem;
            border-radius: 1rem;
            text-align: center;
            box-shadow: 0 15px 30px rgba(0, 0, 0, 0.3);
            transform: translateY(-50px);
            opacity: 0;
            transition: all 0.3s ease-in-out;
        }
        
        .modal-overlay.active .modal-content {
            transform: translateY(0);
            opacity: 1;
        }

        /* Button Gradient for Submit */
        .submit-btn {
            background-image: linear-gradient(to right, #10b981, #059669);
            transition: all 0.3s ease;
        }
        .submit-btn:hover {
            box-shadow: 0 4px 15px rgba(5, 150, 105, 0.4);
        }

        /* Option Hover and Selected Effect with new dark green color and no zoom */
        .quiz-option-label {
            transition: all 0.3s ease-in-out;
        }
        
        /* Change background on hover */
        .quiz-option-label:hover {
            box-shadow: 0 4px 15px rgba(0, 0, 0, 0.1);
            background-color: #059669; /* Dark green background */
        }
        
        /* Change text color to white on hover */
        .quiz-option-label:hover span {
            color: #ffffff;
        }
        
        /* Selected option styling - Shadow removed here */
        .quiz-option-label.selected {
            background-color: #059669; /* Dark green background */
            /* Removed box-shadow here: box-shadow: 0 44px 15px rgba(0, 0, 0, 0.2); */
        }
        
        /* Ensures text inside selected option is white */
        .quiz-option-label.selected span {
            color: #ffffff;
        }
        
        /* Hide the default radio button while keeping it functional */
        .quiz-option-label input[type="radio"] {
            display: none;
        }
        
        /* Adjust main layout to ensure all components fit on screen */
        .main-container {
            display: flex;
            flex-direction: column;
            justify-content: center;
            flex-grow: 1; /* Allows the container to fill available space */
            padding-top: 1rem;
            padding-bottom: 1rem;
        }

        /* On smaller screens, adjust padding to prevent content overflow */
        @media (max-width: 640px) {
            .quiz-content-wrapper {
                padding: 1rem;
            }
        }
        
        /* No zoom effect on buttons */
        .no-zoom:hover {
            transform: none !important;
        }
        
        /* Style for the temporary div used for image generation */
        #download-result-container {
            position: absolute;
            top: -9999px; /* Hide off-screen */
            left: -9999px;
            width: 800px; /* A fixed width for consistent image output */
            background-color: white;
            padding: 2rem;
            box-shadow: 0 0 10px rgba(0,0,0,0.1);
        }
        #download-result-container .header-clone,
        #download-result-container .footer-clone {
            text-align: center;
            padding: 1rem;
            background-color: #10b981;
            color: white;
        }
        #download-result-container .results-clone {
            padding: 2rem;
            text-align: center;
        }
        #download-result-container .results-clone p,
        #download-result-container .results-clone h2 {
            text-align: center;
        }
        #download-result-container .results-clone .mb-3 {
            margin-bottom: 0.75rem;
        }
        #download-result-container .results-clone .mb-6 {
            margin-bottom: 1.5rem;
        }

        /* New styling for the full quiz review section */
        .quiz-review-item {
            border: 1px solid #e5e7eb;
            border-radius: 0.5rem;
            padding: 1.5rem;
            margin-bottom: 1.5rem;
            background-color: #fafafa;
        }

        .quiz-review-question {
            font-weight: 700;
            color: #FF0000; /* Bright red */
            margin-bottom: 0.75rem;
            font-size: 1.125rem; /* text-lg */
        }

        .quiz-review-option {
            padding: 0.5rem;
            border-radius: 0.375rem;
            margin-bottom: 0.5rem;
            display: flex;
            align-items: center;
            gap: 0.5rem;
        }

        .quiz-review-option.correct {
            background-color: #dcfce7; /* green-100 */
            color: #065f46; /* green-800 */
            font-weight: 600;
        }
        .quiz-review-option.incorrect {
            background-color: #fee2e2; /* red-100 */
            color: #991b1b; /* red-800 */
        }
        
        /* --- FIX: Updated the media print query to correctly display the results container --- */
        @media print {
            /* Hide the main header and footer, as well as the button container */
            .no-print,
            #name-entry-container,
            #quiz-content-wrapper {
                display: none !important;
            }
            
            /* Ensure the main container holding the results is fully visible and styled for printing */
            .container {
                box-shadow: none !important;
                border: none !important;
                padding: 0 !important;
                margin: 0 !important;
                width: auto !important;
                max-width: none !important;
                height: auto !important;
            }

            /* Ensure the results container itself is visible and formatted for a clean printout */
            #results-container {
                display: block !important;
                box-shadow: none !important;
                border: none !important;
                padding: 0 !important;
                margin: 0 !important;
                background-color: #ffffff !important;
            }
        }

        /* Custom CSS for the video container to maintain a 16:9 aspect ratio */
        .video-container {
            position: relative;
            padding-bottom: 56.25%; /* 16:9 aspect ratio */
            height: 0;
            overflow: hidden;
            max-width: 100%;
            background: #000;
            border-radius: 1rem;
        }

        .video-container iframe {
            position: absolute;
            top: 0;
            left: 0;
            width: 100%;
            height: 100%;
        }

        /* Styling for the question number circle */
        .question-number-circle {
            display: inline-flex;
            justify-content: center;
            align-items: center;
            width: 30px; /* Adjust size as needed */
            height: 30px; /* Adjust size as needed */
            border-radius: 50%;
            background-color: #059669; /* Green color */
            color: #ffffff; /* White text */
            font-weight: bold;
            margin-right: 10px;
            flex-shrink: 0; /* Prevent shrinking */
        }
    </style>
</head>
<body class="bg-gradient-to-br from-emerald-50 to-green-100 min-h-screen flex flex-col justify-between items-center">

    <!-- Stylized Green Header Label with user info -->
    <div id="header" class="no-print w-full bg-gradient-to-r from-green-700 to-emerald-600 text-white text-center py-5 text-4xl font-extrabold rounded-b-3xl">
        SSTs Test Preparation 2025
        <h3 class="text-xl font-semibold mt-2">By Imran Ustad</h3>
        <p class="text-base">WhatsApp: 03345501369</p>
        <p class="text-base mt-1">
            <a href="https://www.youtube.com/@TheImranUstad" target="_blank" rel="noopener noreferrer" class="text-white hover:text-gray-200 transition-colors">
                https://www.youtube.com/@TheImranUstad
            </a>
        </p>
    </div>

    <!-- Main quiz container with enhanced styling -->
    <div class="container max-w-5xl mx-auto rounded-3xl shadow-2xl bg-white p-8 sm:p-12 my-8 flex-1 flex flex-col justify-center items-center">
        
        <!-- Name entry container (initial screen) -->
        <div id="name-entry-container" class="w-full max-w-md text-center p-8 bg-gray-50 rounded-3xl shadow-inner border-t-4 border-green-500">
            <h2 class="text-3xl font-extrabold text-green-700 mb-6">Welcome to the Quiz!</h2>
            <p class="text-lg text-gray-700 mb-4">Please enter your name to begin.</p>
            <input type="text" id="name-input" placeholder="Enter your name" class="w-full px-4 py-3 rounded-xl border border-gray-300 focus:outline-none focus:ring-2 focus:ring-green-500 mb-6 text-center text-lg">
            <button id="start-btn" class="w-full text-white font-bold py-3.5 rounded-full shadow-lg transition-colors bg-blue-600 hover:bg-blue-700 no-zoom">
                Start Quiz
            </button>
        </div>
        
        <!-- Quiz content wrapper (initially hidden) -->
        <div id="quiz-content-wrapper" class="hidden w-full">
            <!-- Controls and Timer section (Reversed for right alignment) -->
            <div class="flex flex-col sm:flex-row justify-between items-center mb-6 gap-4">
                <!-- This div is for navigation buttons (currently empty) -->
                <div class="flex gap-4">
                    <!-- Navigation buttons will be dynamically shown here -->
                </div>
                <!-- Timer is now on the right -->
                <div class="flex items-center space-x-3">
                    <svg xmlns="http://www.w3.org/2000/svg" class="h-8 w-8 text-red-600" viewBox="0 0 20 20" fill="currentColor">
                        <path fill-rule="evenodd" d="M10 18a8 8 0 100-16 8 8 0 000 16zm1-12a1 1 0 10-2 0v4a1 1 0 00.293.707l2.828 2.829a1 1 0 101.415-1.415L11 9.586V6z" clip-rule="evenodd" />
                    </svg>
                    <span class="text-xl font-semibold text-gray-700">Time Left:</span>
                    <span id="timer" class="text-3xl font-bold text-red-600 bg-red-100 px-5 py-2.5 rounded-xl shadow-inner">60:00</span>
                </div>
            </div>

            <!-- Quiz questions container -->
            <div id="quiz-form" class="space-y-4">
                <!-- Questions and navigation buttons will be dynamically inserted here by JavaScript -->
            </div>
        </div>

        <!-- Results container (initially hidden) -->
        <div id="results-container" class="hidden mt-8 p-8 bg-gray-50 rounded-3xl shadow-inner border-t-4 border-green-500 w-full">
            <h2 class="text-2xl sm:text-3xl font-extrabold text-center mb-4 text-green-700">Quiz Results</h2>
            <p class="text-lg mb-3 text-center">
                <span id="user-name-result" class="font-extrabold text-green-600"></span>
            </p>
            <p class="text-lg mb-3">
                Total Questions: <span id="total-questions" class="font-extrabold text-green-600"></span>
            </p>
            <p class="text-lg mb-6">
                Obtained Marks: <span id="obtained-marks" class="font-extrabold text-green-600"></span>
            </p>

            <!-- Video Container - Moved to appear on the results page -->
            <div class="w-full mx-auto my-8">
                <div class="bg-white p-6 rounded-3xl shadow-2xl">
                    <h3 class="text-xl sm:text-2xl font-extrabold text-center mb-6 text-green-700">Preparation Guide: KPPSC SST Syllabus 2025</h3>
                    <div class="video-container">
                        <iframe width="695" height="391" src="https://www.youtube.com/embed/sFzdY39_Kw8" title="KPPSC SST Syllabus 2025 KPK | SST General, Maths-Physics, Bio-Chem | Past Papers &amp; Preparation Guide" frameborder="0" allow="accelerometer; autoplay; clipboard-write; encrypted-media; gyroscope; picture-in-picture; web-share" referrerpolicy="strict-origin-when-cross-origin" allowfullscreen></iframe>
                    </div>
                </div>
            </div>

            <div id="full-quiz-review" class="mt-8">
                <h3 class="text-xl font-bold text-gray-700 mb-4">Quiz Review:</h3>
                <!-- The full quiz review will be displayed here -->
            </div>
            
            <!-- Button container for the new download button and the print button -->
            <div class="no-print flex flex-col sm:flex-row space-y-4 sm:space-y-0 sm:space-x-4 mt-8">
                <!-- Download button for results as PNG -->
                <button id="download-btn" class="w-full bg-indigo-600 text-white font-bold py-3.5 rounded-full shadow-md hover:bg-indigo-700 transition-colors no-zoom">
                    Download Result Card (PNG)
                </button>
                <!-- Print Result button -->
                <button id="print-btn" class="w-full bg-blue-600 text-white font-bold py-3.5 rounded-full shadow-md hover:bg-blue-700 transition-colors no-zoom">
                    Print Result
                </button>
            </div>
        </div>

    </div>

    <!-- Custom modal for validation/errors -->
    <div id="validation-modal" class="modal-overlay hidden">
        <div class="modal-content">
            <p id="modal-message" class="text-xl font-semibold mb-6 text-gray-800"></p>
            <button id="modal-close-btn" class="bg-red-500 text-white font-bold py-2.5 px-6 rounded-full hover:bg-red-600 transition-colors no-zoom">
                Close
            </button>
        </div>
    </div>
    
    <!-- Updated Green Footer Label with enhanced styling -->
    <footer id="footer" class="no-print w-full bg-gradient-to-r from-green-700 to-emerald-600 text-white text-center py-6 text-2xl font-semibold rounded-t-3xl">
        <h3 class="text-2xl font-extrabold mb-1">By Imran Ustad</h3>
        <p class="text-base mb-1">WhatsApp: 03345501369</p>
        <p class="text-base">
            <a href="https://www.youtube.com/@TheImranUstad" target="_blank" rel="noopener noreferrer" class="text-white hover:text-gray-200 transition-colors">
                https://www.youtube.com/@TheImranUstad
            </a>
        </p>
    </footer>

    <script>
        // Array of 60 MCQs on English topics (Bachelor Level)
        const allQuestions = [
            // Sentence structure in English grammar (10 MCQs)
            { question: "1. What is the fundamental unit of English grammar that expresses a complete thought?", options: ["A. Phrase", "B. Clause", "C. Sentence", "D. Word"], correct: 2 },
            { question: "2. A typical English sentence structure follows the order of:", options: ["A. Object-Verb-Subject", "B. Verb-Subject-Object", "C. Subject-Object-Verb", "D. Subject-Verb-Object"], correct: 3 },
            { question: "3. Which of the following is essential for a complete simple sentence?", options: ["A. A conjunction and two clauses", "B. A subject and a verb", "C. A prepositional phrase and an adverb", "D. An object and a dependent clause"], correct: 1 },
            { question: "4. In the sentence 'The swift fox jumps over the lazy dog,' what is the verb?", options: ["A. swift", "B. fox", "C. jumps", "D. dog"], correct: 2 },
            { question: "5. A sentence must always begin with a capital letter and end with appropriate punctuation. This describes a rule of:", options: ["A. Syntax", "B. Morphology", "C. Phonetics", "D. Semantics"], correct: 0 },
            { question: "6. Which part of a sentence performs the action or is described?", options: ["A. Object", "B. Predicate", "C. Subject", "D. Modifier"], correct: 2 },
            { question: "7. The part of a sentence that contains the verb and provides information about the subject is called the:", options: ["A. Subject", "B. Phrase", "C. Predicate", "D. Clause"], correct: 2 },
            { question: "8. In the sentence 'She sings beautifully,' what is the predicate?", options: ["A. She", "B. sings", "C. beautifully", "D. sings beautifully"], correct: 3 },
            { question: "9. What is the purpose of punctuation marks in sentence structure?", options: ["A. To make sentences longer", "B. To complicate reading", "C. To clarify meaning and indicate pauses/breaks", "D. To add decorative elements"], correct: 2 },
            { question: "10. A declarative sentence:", options: ["A. Asks a question", "B. Expresses a command", "C. Makes a statement", "D. Expresses strong emotion"], correct: 2 },

            // Independent clause (10 MCQs)
            { question: "11. An independent clause is a group of words that contains a subject and a verb and expresses a complete thought. What else is true about it?", options: ["A. It cannot stand alone as a sentence", "B. It always begins with a subordinating conjunction", "C. It can stand alone as a complete sentence", "D. It always acts as an adjective"], correct: 2 },
            { question: "12. Which of the following is an independent clause?", options: ["A. because he was tired", "B. running quickly", "C. She smiled", "D. after the rain stopped"], correct: 2 },
            { question: "13. How many independent clauses are in a simple sentence?", options: ["A. Two or more", "B. Zero", "C. Exactly one", "D. It depends on the length"], correct: 2 },
            { question: "14. When two independent clauses are joined by a comma, what must also be present?", options: ["A. A subordinate conjunction", "B. A coordinating conjunction", "C. A semicolon", "D. A preposition"], correct: 1 },
            { question: "15. Identify the independent clause in the sentence: 'The cat slept, and the dog barked.'", options: ["A. and the dog barked", "B. The cat slept", "C. slept", "D. the dog barked"], correct: 1 },
            { question: "16. An independent clause functions as the main part of a sentence. What is another term for an independent clause?", options: ["A. Subordinate clause", "B. Dependent clause", "C. Main clause", "D. Adverbial clause"], correct: 2 },
            { question: "17. If a sentence contains only one independent clause, it is classified as what type of sentence?", options: ["A. Compound sentence", "B. Complex sentence", "C. Simple sentence", "D. Compound-complex sentence"], correct: 2 },
            { question: "18. Which punctuation mark can join two independent clauses without a coordinating conjunction?", options: ["A. Comma", "B. Colon", "C. Semicolon", "D. Period"], correct: 2 },
            { question: "19. In the sentence 'He studied hard; therefore, he passed the exam,' 'He studied hard' is a/an:", options: ["A. Dependent clause", "B. Phrase", "C. Independent clause", "D. Fragment"], correct: 2 },
            { question: "20. The sentence 'The sun shines brightly.' consists of:", options: ["A. A dependent clause", "B. Two independent clauses", "C. One independent clause", "D. A fragment"], correct: 2 },

            // Dependent clause (10 MCQs)
            { question: "21. A dependent clause contains a subject and a verb but does not express a complete thought. What is its characteristic?", options: ["A. It can stand alone as a sentence", "B. It must be attached to an independent clause", "C. It always starts with a coordinating conjunction", "D. It functions as a noun only"], correct: 1 },
            { question: "22. Which of the following is a dependent clause?", options: ["A. The birds sang", "B. She waited patiently", "C. after she finished her work", "D. He laughed loudly"], correct: 2 },
            { question: "23. A dependent clause is often introduced by a word like 'because,' 'although,' 'if,' or 'when.' What are these words called?", options: ["A. Coordinating conjunctions", "B. Prepositions", "C. Subordinating conjunctions", "D. Adverbs"], correct: 2 },
            { question: "24. Identify the dependent clause in the sentence: 'I will go to the park when the rain stops.'", options: ["A. I will go to the park", "B. when the rain stops", "C. the rain stops", "D. to the park"], correct: 1 },
            { question: "25. A dependent clause can function as an adjective, an adverb, or a noun. When it modifies a noun or pronoun, it is a/an:", options: ["A. Adverbial clause", "B. Noun clause", "C. Adjective clause (relative clause)", "D. Independent clause"], correct: 2 },
            { question: "26. In the sentence 'The student who studied hard passed the test,' the dependent clause 'who studied hard' functions as a/an:", options: ["A. Adverbial clause", "B. Noun clause", "C. Adjective clause", "D. Independent clause"], correct: 2 },
            { question: "27. When a dependent clause acts as a noun, it can function as the subject, object, or complement of a sentence. What is an example?", options: ["A. The man who arrived late", "B. Wherever he goes", "C. What she said surprised everyone", "D. Since it was raining"], correct: 2 },
            { question: "28. If a dependent clause comes before an independent clause, what punctuation is typically used to separate them?", options: ["A. Semicolon", "B. No punctuation", "C. Comma", "D. Colon"], correct: 2 },
            { question: "29. The sentence 'Although it was cold, we still went for a walk.' has 'Although it was cold' as a/an:", options: ["A. Independent clause", "B. Adjective clause", "C. Adverbial dependent clause", "D. Noun clause"], correct: 2 },
            { question: "30. A sentence consisting of one independent clause and one or more dependent clauses is classified as what type of sentence?", options: ["A. Simple sentence", "B. Compound sentence", "C. Complex sentence", "D. Compound-complex sentence"], correct: 2 },

            // Subject, Verb, Object (10 MCQs)
            { question: "31. In a basic English sentence, the person or thing performing the action is the:", options: ["A. Verb", "B. Object", "C. Subject", "D. Predicate"], correct: 2 },
            { question: "32. The word that describes the action or state of being in a sentence is the:", options: ["A. Subject", "B. Object", "C. Verb", "D. Adverb"], correct: 2 },
            { question: "33. In the sentence 'The dog chased the ball,' what is the subject?", options: ["A. chased", "B. ball", "C. dog", "D. the"], correct: 2 },
            { question: "34. The noun or pronoun that receives the action of the verb is called the:", options: ["A. Subject", "B. Predicate", "C. Direct Object", "D. Indirect Object"], correct: 2 },
            { question: "35. In 'Mary read a book,' what is the direct object?", options: ["A. Mary", "B. read", "C. a", "D. book"], correct: 3 },
            { question: "36. A verb that takes a direct object is called a:", options: ["A. Intransitive verb", "B. Linking verb", "C. Transitive verb", "D. Auxiliary verb"], correct: 2 },
            { question: "37. In the sentence 'He gave her a present,' 'present' is the direct object. What is 'her'?", options: ["A. Subject", "B. Indirect object", "C. Adverb", "D. Preposition"], correct: 1 },
            { question: "38. Which type of verb connects the subject to a word that describes or renames the subject (e.g., 'is', 'seem', 'become')?", options: ["A. Transitive verb", "B. Intransitive verb", "C. Linking verb", "D. Action verb"], correct: 2 },
            { question: "39. In the sentence 'The soup smells delicious,' 'smells' is what type of verb?", options: ["A. Action verb", "B. Transitive verb", "C. Linking verb", "D. Auxiliary verb"], correct: 2 },
            { question: "40. A sentence without a clear subject or verb is considered a/an:", options: ["A. Complete sentence", "B. Compound sentence", "C. Sentence fragment", "D. Complex sentence"], correct: 2 },

            // Prepositional phrase (10 MCQs)
            { question: "41. A prepositional phrase begins with a preposition and ends with a noun or pronoun. What is this noun or pronoun called?", options: ["A. Subject of the phrase", "B. Verb of the phrase", "C. Object of the preposition", "D. Modifier"], correct: 2 },
            { question: "42. In 'The book is on the table,' what is the prepositional phrase?", options: ["A. The book", "B. is on", "C. on the table", "D. the table"], correct: 2 },
            { question: "43. A prepositional phrase can function as an adjective. What does it modify in this case?", options: ["A. A verb", "B. Another adverb", "C. A noun or pronoun", "D. A conjunction"], correct: 2 },
            { question: "44. Identify the prepositional phrase functioning as an adjective: 'The girl with long hair is my sister.'", options: ["A. The girl", "B. with long hair", "C. is my sister", "D. long hair"], correct: 1 },
            { question: "45. A prepositional phrase can also function as an adverb. What does it modify in this case?", options: ["A. A noun or pronoun", "B. A verb, an adjective, or another adverb", "C. An independent clause", "D. A subject"], correct: 1 },
            { question: "46. In 'He waited patiently at the bus stop,' 'at the bus stop' is a/an:", options: ["A. Adjective phrase", "B. Adverbial prepositional phrase", "C. Noun phrase", "D. Verb phrase"], correct: 1 },
            { question: "47. Which of the following is a common preposition that starts a prepositional phrase?", options: ["A. And", "B. But", "C. For", "D. So"], correct: 2 },
            { question: "48. Prepositional phrases add detail and context to sentences. Which function describes 'how' an action is performed?", options: ["A. Adjective", "B. Noun", "C. Adverb", "D. Conjunction"], correct: 2 },
            { question: "49. In 'She painted the picture with vibrant colors,' the prepositional phrase 'with vibrant colors' modifies:", options: ["A. She", "B. painted", "C. picture", "D. vibrant"], correct: 1 },
            { question: "50. A prepositional phrase never contains a complete subject-verb pair. What does it typically lack?", options: ["A. An object of the preposition", "B. A preposition", "C. A main verb or a subject that performs the action of the main verb", "D. A modifier"], correct: 2 },

            // Types of sentences (Simple, compound, complex) (10 MCQs)
            { question: "51. A sentence that consists of a single independent clause is called a:", options: ["A. Compound sentence", "B. Complex sentence", "C. Simple sentence", "D. Compound-complex sentence"], correct: 2 },
            { question: "52. Which of these is an example of a simple sentence?", options: ["A. I ran, and he walked.", "B. She sings beautifully.", "C. Although it rained, we played outside.", "D. He studied, and she wrote, because they had exams."], correct: 1 },
            { question: "53. A sentence that consists of two or more independent clauses, usually joined by a coordinating conjunction (FANBOYS) or a semicolon, is called a:", options: ["A. Simple sentence", "B. Complex sentence", "C. Compound sentence", "D. Fragment"], correct: 2 },
            { question: "54. Identify the compound sentence:", options: ["A. The dog barked loudly.", "B. She reads books, and he watches movies.", "C. Because it was late, we left.", "D. After they ate, they went to sleep."], correct: 1 },
            { question: "55. Which coordinating conjunction connects two independent clauses that express contrast?", options: ["A. And", "B. For", "C. Yet", "D. So"], correct: 2 },
            { question: "56. A sentence that consists of one independent clause and at least one dependent clause is called a:", options: ["A. Simple sentence", "B. Compound sentence", "C. Complex sentence", "D. Compound-complex sentence"], correct: 2 },
            { question: "57. Which of these is an example of a complex sentence?", options: ["A. The sun set.", "B. He ran, but she walked.", "C. When the music stopped, everyone left the dance floor.", "D. I like coffee, and she likes tea."], correct: 2 },
            { question: "58. A sentence that contains two or more independent clauses and at least one dependent clause is classified as a:", options: ["A. Simple sentence", "B. Compound sentence", "C. Complex sentence", "D. Compound-complex sentence"], correct: 3 },
            { question: "59. Identify the compound-complex sentence:", options: ["A. The student studied hard for the exam.", "B. She graduated, and she found a job quickly.", "C. Although it was difficult, he persevered, and he eventually succeeded.", "D. We went to the store because we needed milk."], correct: 2 },
            { question: "60. What is the minimum number of independent clauses required in a compound-complex sentence?", options: ["A. One", "B. Two", "C. Three", "D. Zero"], correct: 1 }
        ];

        let userAnswers = {};
        let currentQuestionIndex = 0;
        let timerSeconds = 60 * 60; // 60 minutes for 60 questions
        let timerInterval;
        let userName = '';

        const nameEntryContainer = document.getElementById('name-entry-container');
        const quizContentWrapper = document.getElementById('quiz-content-wrapper');
        const nameInput = document.getElementById('name-input');
        const startBtn = document.getElementById('start-btn');
        const quizForm = document.getElementById('quiz-form');
        const resultsContainer = document.getElementById('results-container');
        const timerDisplay = document.getElementById('timer');
        const modal = document.getElementById('validation-modal');
        const modalMessage = document.getElementById('modal-message');
        const modalCloseBtn = document.getElementById('modal-close-btn');
        const printBtn = document.getElementById('print-btn');
        const downloadBtn = document.getElementById('download-btn');
        const userNameResult = document.getElementById('user-name-result');
        const fullQuizReview = document.getElementById('full-quiz-review');

        // Function to render a single question on the page
        function renderQuestion(index) {
            quizForm.innerHTML = ''; // Clear previous questions
            const q = allQuestions[index];

            const questionBox = document.createElement('div');
            questionBox.className = 'bg-slate-100 p-6 rounded-2xl shadow-lg mb-6';
            
            const questionText = document.createElement('p');
            // Apply bright red color directly via class
            questionText.className = 'text-lg sm:text-xl font-bold font-georgia text-[#FF0000] mb-4 flex items-center'; 
            
            const questionNumberSpan = document.createElement('span');
            questionNumberSpan.className = 'question-number-circle';
            questionNumberSpan.textContent = (index + 1);
            questionText.appendChild(questionNumberSpan);
            
            const questionContentSpan = document.createElement('span');
            // Get clean text content from the question string (strip leading number and dot)
            questionContentSpan.textContent = q.question.replace(/^\d+\.\s*/, ''); 
            questionText.appendChild(questionContentSpan);

            questionBox.appendChild(questionText);

            q.options.forEach((option, optionIndex) => {
                const label = document.createElement('label');
                label.className = 'quiz-option-label relative flex items-center p-4 mb-3 rounded-xl bg-white border border-gray-200 cursor-pointer transition-all duration-300 ease-in-out';
                
                const input = document.createElement('input');
                input.type = 'radio';
                input.name = `question-${index}`;
                input.value = optionIndex;
                
                const optionSpan = document.createElement('span');
                optionSpan.className = 'ml-3 text-base sm:text-lg text-gray-800 font-medium';
                // Options are already plain text, no need to strip HTML
                optionSpan.textContent = option; 
                
                label.appendChild(input);
                label.appendChild(optionSpan);
                questionBox.appendChild(label);
            });

            // Add navigation buttons to the question box
            const navButtonsDiv = document.createElement('div');
            navButtonsDiv.className = 'flex justify-between mt-6 space-x-4';
            
            // Previous Button
            const prevBtn = document.createElement('button');
            prevBtn.id = 'prev-btn';
            prevBtn.textContent = 'Previous';
            prevBtn.className = 'w-full text-white font-bold py-3.5 rounded-full shadow-lg transition-colors bg-gray-500 hover:bg-gray-600 no-zoom';
            prevBtn.addEventListener('click', previousQuestion);

            // Hide the previous button on the first question
            if (currentQuestionIndex === 0) {
                prevBtn.classList.add('hidden');
            }

            // Next/Submit Button
            let nextBtn;
            if (currentQuestionIndex === allQuestions.length - 1) {
                nextBtn = document.createElement('button');
                nextBtn.id = 'submit-btn';
                nextBtn.textContent = 'Submit Quiz';
                nextBtn.className = 'w-full text-white font-bold py-3.5 rounded-full shadow-lg transition-colors submit-btn no-zoom';
                nextBtn.addEventListener('click', submitQuiz);
            } else {
                nextBtn = document.createElement('button');
                nextBtn.id = 'next-btn';
                nextBtn.textContent = 'Next';
                nextBtn.className = 'w-full text-white font-bold py-3.5 rounded-full shadow-lg transition-colors bg-blue-600 hover:bg-blue-700 no-zoom';
                nextBtn.addEventListener('click', nextQuestion);
            }
            
            navButtonsDiv.appendChild(prevBtn);
            navButtonsDiv.appendChild(nextBtn);
            questionBox.appendChild(navButtonsDiv);
            
            quizForm.appendChild(questionBox);
            
            // Highlight the previously selected answer if it exists
            if (userAnswers[index] !== undefined) {
                const selectedLabel = quizForm.querySelector(`input[name="question-${index}"][value="${userAnswers[index]}"]`).closest('label');
                if (selectedLabel) {
                    selectedLabel.classList.add('selected');
                    selectedLabel.querySelector('input').checked = true; // Set the radio button as checked
                }
            }

            // Add event listeners for new radio buttons
            const radioButtons = quizForm.querySelectorAll('input[type="radio"]');
            radioButtons.forEach(radio => {
                radio.addEventListener('change', (event) => {
                    const parentLabel = event.target.closest('label');
                    const questionBox = parentLabel.closest('div');
                    
                    // Remove 'selected' class from all other labels in the same question
                    questionBox.querySelectorAll('label').forEach(label => {
                        label.classList.remove('selected');
                    });
                    
                    // Add 'selected' class to the currently chosen label
                    parentLabel.classList.add('selected');
                });
            });
        }
        
        // Function to start the countdown timer
        function startTimer() {
            timerInterval = setInterval(() => {
                timerSeconds--;
                const minutes = Math.floor(timerSeconds / 60);
                const seconds = timerSeconds % 60;
                timerDisplay.textContent = `${minutes.toString().padStart(2, '0')}:${seconds.toString().padStart(2, '0')}`;
                
                if (timerSeconds <= 0) {
                    clearInterval(timerInterval);
                    timerDisplay.textContent = "Time's up!";
                    submitQuiz();
                }
            }, 1000);
        }

        // Function to show the custom validation modal
        function showModal(message) {
            modalMessage.textContent = message;
            modal.classList.add('active');
            modal.classList.remove('hidden');
        }

        // Function to move to the next question
        function nextQuestion() {
            const selected = document.querySelector(`input[name="question-${currentQuestionIndex}"]:checked`);
            if (!selected) {
                showModal("Please select an option before moving to the next question.");
                return;
            }
            userAnswers[currentQuestionIndex] = parseInt(selected.value);
            
            currentQuestionIndex++;
            if (currentQuestionIndex < allQuestions.length) {
                renderQuestion(currentQuestionIndex);
            }
        }
        
        // Function to move to the previous question
        function previousQuestion() {
            // Save the current answer before moving back
            const selected = document.querySelector(`input[name="question-${currentQuestionIndex}"]:checked`);
            if (selected) {
                userAnswers[currentQuestionIndex] = parseInt(selected.value);
            }
            
            currentQuestionIndex--;
            if (currentQuestionIndex >= 0) {
                renderQuestion(currentQuestionIndex);
            }
        }
        
        // New function to start the quiz after name entry
        function startQuiz() {
            const name = nameInput.value.trim();
            if (!name) {
                showModal("Please enter your name to start the quiz.");
                return;
            }
            userName = name;
            nameEntryContainer.classList.add('hidden');
            quizContentWrapper.classList.remove('hidden');
            renderQuestion(currentQuestionIndex);
            startTimer();
        }

        // Function to render the full quiz results with correct and incorrect answers highlighted
        function renderFullResults() {
            fullQuizReview.innerHTML = ''; // Clear previous review
            
            allQuestions.forEach((q, index) => {
                const questionReviewItem = document.createElement('div');
                questionReviewItem.className = 'quiz-review-item';
                
                const questionText = document.createElement('p');
                // Use the quiz-review-question class to apply bright red color
                questionText.className = 'quiz-review-question';
                // Get clean text content from the question string (strip leading number and dot)
                questionText.innerHTML = `<span class="question-number-circle">${index + 1}</span> ${q.question.replace(/^\d+\.\s*/, '')}`;
                questionReviewItem.appendChild(questionText);

                q.options.forEach((option, optionIndex) => {
                    const optionDiv = document.createElement('div');
                    optionDiv.className = 'quiz-review-option';
                    
                    const isCorrect = optionIndex === q.correct;
                    const isUserAnswer = userAnswers[index] === optionIndex;

                    // Apply green for correct answer
                    if (isCorrect) {
                        optionDiv.classList.add('correct');
                        optionDiv.innerHTML = `✅ ${option}`;
                    } 
                    // Apply red for incorrect user answer
                    else if (isUserAnswer) {
                        optionDiv.classList.add('incorrect');
                        optionDiv.innerHTML = `❌ ${option}`;
                    }
                    // Default styling for other options
                    else {
                        optionDiv.innerHTML = `${String.fromCharCode(65 + optionIndex)}. ${option}`;
                    }
                    
                    questionReviewItem.appendChild(optionDiv);
                });
                
                fullQuizReview.appendChild(questionReviewItem);
            });
        }

        // Function to submit the quiz and display results
        function submitQuiz() {
            clearInterval(timerInterval); // Stop the timer
            
            // Check if the final question is answered
            const selected = document.querySelector(`input[name="question-${currentQuestionIndex}"]:checked`);
            if (!selected) {
                showModal("Please select an option before submitting.");
                return;
            }
            userAnswers[currentQuestionIndex] = parseInt(selected.value);

            // Disable all radio buttons and buttons after submission
            const allRadios = quizForm.querySelectorAll('input[type="radio"]');
            allRadios.forEach(radio => radio.disabled = true);

            let score = 0;
            allQuestions.forEach((q, index) => {
                if (userAnswers[index] === q.correct) {
                    score++;
                }
            });

            // Display results
            userNameResult.textContent = `Quiz Taker: ${userName}`;
            document.getElementById('total-questions').textContent = allQuestions.length;
            document.getElementById('obtained-marks').textContent = score;
            
            // Render the full quiz review
            renderFullResults();

            // Hide quiz, show results container
            quizContentWrapper.classList.add('hidden');
            resultsContainer.classList.remove('hidden');
            resultsContainer.scrollBy.scrollIntoView({ behavior: 'smooth' });
        }
        
        // Event listeners
        document.addEventListener('DOMContentLoaded', () => {
            // Show the name entry screen by default
            nameEntryContainer.classList.remove('hidden');
        });
        
        startBtn.addEventListener('click', startQuiz);
        
        modalCloseBtn.addEventListener('click', () => {
            modal.classList.add('hidden');
            modal.classList.remove('active');
        });
        
        // Event listener for the "Print Result" button
        printBtn.addEventListener('click', () => {
            window.print();
        });
        
        // Event listener for the "Download Result Card" button
        downloadBtn.addEventListener('click', () => {
            const headerContent = document.getElementById('header').innerHTML;
            const footerContent = document.getElementById('footer').innerHTML;
            const userName = document.getElementById('user-name-result').textContent;
            const totalQuestions = document.getElementById('total-questions').textContent;
            const obtainedMarks = document.getElementById('obtained-marks').textContent;

            // Create a temporary, hidden container for the image generation
            const tempContainer = document.createElement('div');
            tempContainer.id = 'download-result-container';
            document.body.appendChild(tempContainer);

            // Get current date and time
            const now = new Date();
            const dateStr = `${String(now.getDate()).padStart(2, '0')}/${String(now.getMonth() + 1).padStart(2, '0')}/${now.getFullYear()}`;
            const timeStr = `${String(now.getHours()).padStart(2, '0')}:${String(now.getMinutes()).padStart(2, '0')}:${String(now.getSeconds()).padStart(2, '0')}`;
            
            // Build the simplified content for the image
            tempContainer.innerHTML = `
                <div class="header-clone">${headerContent}</div>
                <div class="results-clone">
                    <h2 class="text-3xl font-extrabold text-center mb-4 text-green-700">Quiz Results</h2>
                    <p class="text-lg mb-1 text-center font-bold text-gray-700">English Class 9 Unit 9 MCQs</p>
                    <p class="text-lg mb-3 text-center font-extrabold text-green-600">${userName}</p>
                    <p class="text-lg text-gray-700 mt-4 text-center">Date: ${dateStr} - Time: ${timeStr}</p>
                    <p class="text-lg mb-3 text-center">
                        Total Questions: <span class="font-extrabold text-green-600">${totalQuestions}</span>
                    </p>
                    <p class="text-lg mb-6 text-center">
                        Obtained Marks: <span class="font-extrabold text-green-600">${obtainedMarks}</span>
                    </p>
                </div>
                <div class="footer-clone">${footerContent}</div>
            `;
            
            // Use html2canvas to capture the content of the temporary container
            html2canvas(tempContainer, {
                scale: 2, // Increase scale for a higher-quality image
                useCORS: true,
                backgroundColor: '#ffffff'
            }).then(canvas => {
                const image = canvas.toDataURL('image/png');
                const link = document.createElement('a');
                link.href = image;
                link.download = 'SST_Test_Result_Card.png';
                document.body.appendChild(link);
                link.click();
                document.body.removeChild(link);
            }).finally(() => {
                // Clean up the temporary container
                document.body.removeChild(tempContainer);
            });
        });
    </script>
</body>
</html>
